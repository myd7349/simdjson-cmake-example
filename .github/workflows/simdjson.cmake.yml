name: upstream

on:
  push:
    branches:
      - master
      - ci
  pull_request:
    branches:
      - master
      - ci

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Cloning ${{ github.repository }}...
        uses: actions/checkout@v2
        with:
          path: example

      - name: Cloning simdjson...
        uses: actions/checkout@v2
        with:
          repository: simdjson/simdjson
          path: simdjson

      - name: Configuring, building, installing simdjson on ${{ runner.os }}...
        shell: cmake -P {0}
        run: |
          if("${{ runner.os }}" STREQUAL "Linux" OR "${{ runner.os }}" STREQUAL "macOS")
            execute_process(
              COMMAND mkdir ./simdjson/build/install
              COMMAND "${CMAKE_COMMAND}"
                -S ./simdjson
                -B ./simdjson/build
                -D CMAKE_BUILD_TYPE=$ENV{BUILD_TYPE}
                -D CMAKE_INSTALL_PREFIX=./simdjson/build/install
              COMMAND popd
              COMMAND popd
              RESULT_VARIABLE result
              ERROR_VARIABLE error_message
            )

            if(NOT result EQUAL 0)
              message(FATAL_ERROR "CMake configuration error(${result}): ${error_message}.")
            endif()
          elseif("${{ runner.os }}" STREQUAL "Windows")
            execute_process(
              COMMAND mkdir .\simdjson\build\install
              COMMAND "${CMAKE_COMMAND}"
                -S .\simdjson
                -B .\simdjson\build
                -D CMAKE_BUILD_TYPE=$ENV{BUILD_TYPE}
                -D CMAKE_INSTALL_PREFIX=.\simdjson\build\install
                -G "Visual Studio 16 2019"
                -A x64
              RESULT_VARIABLE result
              ERROR_VARIABLE error_message
            )

            if(NOT result EQUAL 0)
              message(FATAL_ERROR "CMake configuration error(${result}): ${error_message}.")
            endif()
          else()
            message(FATAL_ERROR "Unexpected runner OS: ${{ runner.os }}.")
          endif()

          execute_process(
            COMMAND "${CMAKE_COMMAND}"
              --build .
              --target install
            RESULT_VARIABLE result
            ERROR_VARIABLE error_message
          )

          if(NOT result EQUAL 0)
            message(FATAL_ERROR "CMake build error(${result}): ${error_message}.")
          endif()

      - name: Building example on ${{ runner.os }}...
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          pushd example
          mkdir build
          pushd build
          pwd
          echo ${{ github.workspace }}
          cmake .. -DCMAKE_PREFIX_PATH='${{ github.workspace }}/simdjson/build/install'
          make print_json
          if [[ "$OSTYPE" == "darwin"* ]]; then cp ${{ github.workspace }}/simdjson/build/install/lib/*.dylib ./; fi;
          ./print_json ../CMakeSettings.json
          popd
          popd

      - name: Building example on ${{ runner.os }}...
        if: ${{ runner.os == 'Windows' }}
        run: |
          pushd example
          mkdir build
          pushd build
          Get-Location
          echo ${{ github.workspace }}
          cmake .. -G "Visual Studio 16 2019" -A x64 --debug-find -DCMAKE_PREFIX_PATH="${{ github.workspace }}\simdjson\build\install" -DMSVC_USE_STATIC_CRT=OFF
          cmake --build . --config Release --target print_json
          .\Release\print_json.exe ..\CMakeSettings.json
          popd
          popd

# References:
# [actions/starter-workflows](https://github.com/actions/starter-workflows)
# [vcpkg-example](https://github.com/myd7349/simdjson-cmake-example)
# [Workflow syntax for GitHub Actions](https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions)
# [Context and expression syntax for GitHub Actions](https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions)
# [starter-workflows/ci/python-app.yml](https://github.com/actions/starter-workflows/blob/master/ci/python-app.yml)
# [dyld: Library not loaded â€¦ Reason: Image not found](https://stackoverflow.com/questions/17703510/dyld-library-not-loaded-reason-image-not-found)
# https://github.com/barisione/clang-format-hooks/blob/master/git-pre-commit-format#L34-L42
# [How to detect the OS from a Bash script?](https://stackoverflow.com/questions/394230/how-to-detect-the-os-from-a-bash-script)
# [Copy all files with a certain extension from all subdirectories](https://stackoverflow.com/questions/15617016/copy-all-files-with-a-certain-extension-from-all-subdirectories)
# https://github.com/cycfi/elements/blob/master/.github/workflows/build.yml
